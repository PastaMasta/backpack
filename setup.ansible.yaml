# -*- coding: utf-8 -*-
#
# Ansible playbook to handle package installs
#
---
- name: Setup environment
  hosts: localhost
  gather_facts: true
  vars:
    packages:
      Fedora:
        - ansible
        - banner
        - bash-completion
        - cowsay
        - curl
        - dos2unix
        - figlet
        - findutils
        - git
        - iotop
        - jq
        - lsof
        - man-db
        - man-pages
        - nmap
        - nmap-ncat
        - npm
        - psmisc
        - rsync
        - shellcheck
        - terraform
        - tig
        - tmux
        - tree
        - vagrant
        - wget
        - xpanes

      Ubuntu:
        - ansible
        - bash-completion
        - cargo
        - cowsay
        - curl
        - dos2unix
        - figlet
        - findutils
        - git
        - golang-go
        - iotop
        - jq
        - lsof
        - man-db
        - ncat
        - nmap
        - npm
        - plocate
        - psmisc
        - python3-pip
        - rsync
        - ruby
        - ruby-dev
        - ruby-rubygems
        - shellcheck
        - sysvbanner
        - terraform
        - tig
        - tmux
        - tmux-xpanes
        - tree
        - vagrant
        - wget

  tasks:
    - name: Install favorite OS packages
      become: true
      package:
        state: present
        name: "{{ packages[ansible_distribution] }}"

    - name: Install python3 pips
      ansible.builtin.pip:
        state: present
        executable: /usr/bin/pip3
        extra_args: "--user"
        name:
          - awscli
          - cf2tf
          - cfn-flip
          - checkov
          - json2yaml
          - pipdeptree
          - pre-commit
          - yamllint

    - name: Install Ruby gems
      community.general.gem:
        state: present
        user_install: true
        name: "{{item}}"
      loop: # gem module name: only supports strings, not a list ☹️
        - bundler
        - mdl
        - pry
        - rake
        - rubocop

          #    - name: Install node.js npms
          #      become: true
          #      npm:
          #        state: present
          #        name: "{{item}}"
          #      loop:
          #        - prettier
          #

    - name: Install go packages
      ansible.builtin.command:
        cmd: go install {{ item }}
      environment:
        GOPATH: "{{ ansible_env.HOME }}/go"
        PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/go/bin"
      register: go_install_result
      changed_when: "'downloading' in go_install_result.stderr or 'go: finding' in go_install_result.stderr"
      failed_when: go_install_result.rc != 0
      loop:
        - github.com/terraform-docs/terraform-docs@v0.19.0
        - mvdan.cc/sh/v3/cmd/shfmt@latest
        - github.com/warrensbox/terraform-switcher@v1.5.0

    - name: Install Rust cargos
      community.general.cargo:
        state: present
        name:
          - diffr
