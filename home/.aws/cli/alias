#------------------------------------------------------------------------------+
[toplevel]
#------------------------------------------------------------------------------+
# Who are you anyway?
whoami = sts get-caller-identity


# List all cloudformation stacks
cf-ls = cloudformation list-stacks --query 'StackSummaries[*].[StackName]' --output text
#------------------------------------------------------------------------------+
[command secretsmanager]
#------------------------------------------------------------------------------+

# Get all profiles
profiles = !f() {
    awk -F '(\\[profile )|\\]' '/^\[profile\s.*\]$/ {print $2}' ~/.aws/config
  }; f

#------------------------------------------------------------------------------+
[command cloudformation]
#------------------------------------------------------------------------------+

#------------------------------------------------------------------------------+
[command ssm]
#------------------------------------------------------------------------------+
# Get SSM param values
ssmget = !f() {
    [[ $# -lt 1 ]] && echo "aws ssmget /path/to/parameter" && return 1
    for i in ${*} ; do
      aws ssm get-parameter --query Parameter.Value --output text --name $i
    done
  }; f

# List SSM params by path
ssmls = !f() {
    [[ $# -lt 1 ]] && echo "aws ssmls /path" && return 1
    for i in ${*} ; do
      aws ssm get-parameters-by-path --recursive --path $i --query Parameters[].Name --output text | fmt -1
    done
  }; f

# Get Secrets manager values
smget = !f() {
    [[ $# -lt 1 ]] && echo "aws smget /path/to/secret" && return 1
    for i in ${*} ; do
      aws secretsmanager get-secret-value --secret-id $i --query SecretString --output text
    done
  }; f
#------------------------------------------------------------------------------+
[command ec2]
#------------------------------------------------------------------------------+
# List all ec2 instances
ls = describe-instances --query "Reservations[*].Instances[*].{InstanceID:InstanceId, Name:Tags[?Key=='Name']|[0].Value}"

# Open a shell on an ec2 instance with SSM
login = !f() {
    [[ $# -lt 1 ]] && echo "aws ec2 login i-1234|nameTag [ command ]" && return 1
    Target="$1"
    shift # so rest of line is command
    Command="${*:-bash -l}" # Default to bash

    if [[ ${Target} =~ ^i-.* ]] ; then
      InstanceId=${Target}
    else
      InstanceId=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=${Target}" --query "Reservations[*].Instances[*].InstanceId" --output text)
    fi

    aws ssm start-session --target "${InstanceId}" --document-name AWS-StartInteractiveCommand --parameters command="${Command}"
  };f

# # Open a RDP tunnel via SSM, login direct to instance with mstsc
# rdp = !f() {
#   [[ $# -lt 1 ]] && echo "aws ec2 rdp i-1234" && return 1
#   InstanceId="$1"
#   shift
#   Command="${*:-bash -l}" # Default to bash
#   aws ssm start-session --target "${InstanceId}" --document-name AWS-StartInteractiveCommand --parameters command="${Command}"
#   };f
