#------------------------------------------------------------------------------+
[toplevel]
#------------------------------------------------------------------------------+
# Who are you anyway?
whoami = sts get-caller-identity

# Lists out all profiles
profiles = configure list-profiles

# aliases for my aliases so I can alias while I alias
cf = cloudformation
#------------------------------------------------------------------------------+
[command secretsmanager]
#------------------------------------------------------------------------------+
# Lists secrets
ls = list-secrets --query SecretList[*].Name

get = get-secret-value --query SecretString --secret-id


#------------------------------------------------------------------------------+
[command cloudformation]
#------------------------------------------------------------------------------+
# List all cloudformation stacks
ls = list-stacks --query 'StackSummaries[*].[StackName]'

#------------------------------------------------------------------------------+
[command ssm]
#------------------------------------------------------------------------------+

# List SSM params by path
ls = !f() {
    [[ $# -lt 1 ]] && echo "aws ssm ls /path [/path2 ...]" && return 1
    for i in ${*} ; do
      aws ssm get-parameters-by-path --recursive --path $i --query Parameters[].Name --output text | fmt -1
    done
  }; f

# Get SSM param values
get = get-parameter --query Parameter.Value --name

#------------------------------------------------------------------------------+
[command ec2]
#------------------------------------------------------------------------------+
# List all ec2 instances
ls = describe-instances --query "Reservations[*].Instances[*].{InstanceID:InstanceId, Name:Tags[?Key=='Name']|[0].Value}"

# Open a shell on an ec2 instance with SSM
login = !f() {
    [[ $# -lt 1 ]] && echo "aws ec2 login i-1234|nameTag [ command ]" && return 1
    Target="$1"
    shift # so rest of line is command
    Command="${*:-bash -l}" # Default to bash

    if [[ ${Target} =~ ^i-.* ]] ; then
      InstanceId=${Target}
    else
      InstanceId=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=${Target}" --query "Reservations[*].Instances[*].InstanceId" --output text)
    fi

    aws ssm start-session --target "${InstanceId}" --document-name AWS-StartInteractiveCommand --parameters command="${Command}"
  };f

# # Open a RDP tunnel via SSM, login direct to instance with mstsc
# rdp = !f() {
#   [[ $# -lt 1 ]] && echo "aws ec2 rdp i-1234" && return 1
#   InstanceId="$1"
#   shift
#   Command="${*:-bash -l}" # Default to bash
#   aws ssm start-session --target "${InstanceId}" --document-name AWS-StartInteractiveCommand --parameters command="${Command}"
#   };f
